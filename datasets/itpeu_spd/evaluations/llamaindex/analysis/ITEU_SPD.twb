<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' inline='true' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03' name='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shthanka.ORADEV/Oracle Content/Gen AI/rag_tester_llidx/datasets/itpeu_spd/evaluations/llamaindex/data/ITPEU_SPD_S001_00_GM_command-r_EM_embed-english-v3.0_C_128_K_3_2024-04-23.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
          <database-filter>
            <expression op='='>
              <expression op='*' />
            </expression>
          </database-filter>
          <table-filter>
            <expression op='='>
              <expression op='Responses' />
            </expression>
          </table-filter>
          <columns header='yes'>
            <column datatype='string' name='query_num' />
            <column datatype='string' name='query' />
            <column datatype='string' name='expected_answer' />
            <column datatype='string' name='generated_answer' />
            <column datatype='real' name='correctness' />
            <column datatype='real' name='faithfulness' />
            <column datatype='string' name='rag_strategy' />
            <column datatype='string' name='rag_strategy_desc' />
            <column datatype='integer' name='parameter_1' />
            <column datatype='integer' name='parameter_2' />
            <column datatype='string' name='parameter_3' />
            <column datatype='string' name='parameter_4' />
            <column datatype='string' name='parameter_5' />
            <column datatype='string' name='model' />
            <column datatype='string' name='embed_model' />
            <column datatype='string' name='eval_model' />
            <column datatype='integer' name='embed_dimensions' />
            <column datatype='string' name='reranker' />
            <column datatype='string' name='run_date' />
            <column datatype='string' name='eval_name' />
            <column datatype='string' name='Path' />
            <column datatype='string' name='Sheet' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
          <database-filter>
            <expression op='='>
              <expression op='*' />
            </expression>
          </database-filter>
          <table-filter>
            <expression op='='>
              <expression op='Responses' />
            </expression>
          </table-filter>
          <columns header='yes'>
            <column datatype='string' name='query_num' />
            <column datatype='string' name='query' />
            <column datatype='string' name='expected_answer' />
            <column datatype='string' name='generated_answer' />
            <column datatype='real' name='correctness' />
            <column datatype='real' name='faithfulness' />
            <column datatype='string' name='rag_strategy' />
            <column datatype='string' name='rag_strategy_desc' />
            <column datatype='integer' name='parameter_1' />
            <column datatype='integer' name='parameter_2' />
            <column datatype='string' name='parameter_3' />
            <column datatype='string' name='parameter_4' />
            <column datatype='string' name='parameter_5' />
            <column datatype='string' name='model' />
            <column datatype='string' name='embed_model' />
            <column datatype='string' name='eval_model' />
            <column datatype='integer' name='embed_dimensions' />
            <column datatype='string' name='reranker' />
            <column datatype='string' name='run_date' />
            <column datatype='string' name='eval_name' />
            <column datatype='string' name='Path' />
            <column datatype='string' name='Sheet' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Responses+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_num</remote-name>
            <remote-type>130</remote-type>
            <local-name>[query_num]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>query_num</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query</remote-name>
            <remote-type>130</remote-type>
            <local-name>[query]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>query</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected_answer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[expected_answer]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>expected_answer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generated_answer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[generated_answer]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>generated_answer</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>correctness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[correctness]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>correctness</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>faithfulness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[faithfulness]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>faithfulness</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rag_strategy</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rag_strategy]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>rag_strategy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rag_strategy_desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rag_strategy_desc]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>rag_strategy_desc</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[parameter_1]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[parameter_2]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_3]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_4]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_5]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_5</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>embed_model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[embed_model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>embed_model</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eval_model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>eval_model</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>embed_dimensions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[embed_dimensions]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>embed_dimensions</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reranker</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reranker]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>reranker</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_date]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>run_date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eval_name]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>eval_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;' value='Total Correctness' />
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;' value='(Max - Min) Correctness' />
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_883268482765733889:qk]&quot;' value='(Max - Avg)' />
        </aliases>
      </column>
      <column caption='Query Concat' datatype='string' name='[Calculation_883268482761932800]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[query_num]+&quot;_&quot;+ [query]' />
      </column>
      <column caption='rag_strategy_main' datatype='string' name='[Rag Strategy (copy)_2301057942909206530]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([rag_strategy_desc], &apos;_&apos;,1)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Responses' datatype='table' name='[__tableau_internal_object_id__].[Responses_42D1376E7714462C833D266E39621427]' role='measure' type='quantitative' />
      <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
      <column caption='Eval Name' datatype='string' name='[eval_name]' role='dimension' type='nominal' />
      <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
      <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
      <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Parameter 2' datatype='integer' name='[parameter_2]' role='dimension' type='ordinal' />
      <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
      <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
      <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
      <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
      <column caption='Run Date' datatype='string' name='[run_date]' role='dimension' type='nominal' />
      <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
      <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:parameter_1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>512</bucket>
            </map>
            <map to='circle'>
              <bucket>4</bucket>
            </map>
            <map to='diamond'>
              <bucket>1024</bucket>
            </map>
            <map to='plus'>
              <bucket>128</bucket>
            </map>
            <map to='square'>
              <bucket>5</bucket>
            </map>
            <map to='times'>
              <bucket>256</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rag_strategy_desc:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Basic_Rerank&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Basic&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SWindow_Basic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Recursive_Basic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SWindow_Rerank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Recursive Retrieval&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Fusion_Basic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fuse Vector and BM25 Searches with Reciprocal Rerank&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Recursive_Rerank&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='query_num' />
        <field-sort-custom-order field='Calculation_883268482761932800' />
        <field-sort-custom-order field='query' />
        <field-sort-custom-order field='expected_answer' />
        <field-sort-custom-order field='generated_answer' />
        <field-sort-custom-order field='correctness' />
        <field-sort-custom-order field='faithfulness' />
        <field-sort-custom-order field='rag_strategy' />
        <field-sort-custom-order field='Rag Strategy (copy)_2301057942909206530' />
        <field-sort-custom-order field='parameter_1' />
        <field-sort-custom-order field='parameter_2' />
        <field-sort-custom-order field='model' />
        <field-sort-custom-order field='run_date' />
        <field-sort-custom-order field='eval_name' />
        <field-sort-custom-order field='rag_strategy_desc' />
        <field-sort-custom-order field='Calculation_2301057942909087745' />
        <field-sort-custom-order field='eval_model' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='Sheet' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Responses' id='Responses_42D1376E7714462C833D266E39621427'>
            <properties context=''>
              <relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
                <database-filter>
                  <expression op='='>
                    <expression op='*' />
                  </expression>
                </database-filter>
                <table-filter>
                  <expression op='='>
                    <expression op='Responses' />
                  </expression>
                </table-filter>
                <columns header='yes'>
                  <column datatype='string' name='query_num' />
                  <column datatype='string' name='query' />
                  <column datatype='string' name='expected_answer' />
                  <column datatype='string' name='generated_answer' />
                  <column datatype='real' name='correctness' />
                  <column datatype='real' name='faithfulness' />
                  <column datatype='string' name='rag_strategy' />
                  <column datatype='string' name='rag_strategy_desc' />
                  <column datatype='integer' name='parameter_1' />
                  <column datatype='integer' name='parameter_2' />
                  <column datatype='string' name='parameter_3' />
                  <column datatype='string' name='parameter_4' />
                  <column datatype='string' name='parameter_5' />
                  <column datatype='string' name='model' />
                  <column datatype='string' name='embed_model' />
                  <column datatype='string' name='eval_model' />
                  <column datatype='integer' name='embed_dimensions' />
                  <column datatype='string' name='reranker' />
                  <column datatype='string' name='run_date' />
                  <column datatype='string' name='eval_name' />
                  <column datatype='string' name='Path' />
                  <column datatype='string' name='Sheet' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Crct_All_Strategy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='level-members' level='[none:rag_strategy_desc:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' member-value='&quot;GPT-4&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='49' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='69' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='356' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='36' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='on' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='10' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='10' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-weight' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk])</cols>
      </table>
      <simple-id uuid='{A4BF51F3-68D5-4F6C-8BB3-14952E71FB41}' />
    </worksheet>
    <worksheet name='Crct_Chunk_Size_Basic'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rag_strategy_desc:nk]' member='&quot;Basic&quot;' />
              <groupfilter function='member' level='[none:rag_strategy_desc:nk]' member='&quot;Basic_Rerank&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='78' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='40' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='460' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]))</cols>
      </table>
      <simple-id uuid='{CE57F65F-543B-4FD1-89C3-CC2CE4025AD0}' />
    </worksheet>
    <worksheet name='Crct_Faith_All_Strategy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='level-members' level='[none:rag_strategy_desc:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' member-value='&quot;GPT-4&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='49' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='69' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='356' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='36' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='on' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='10' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='10' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-weight' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <size column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk])</cols>
      </table>
      <simple-id uuid='{38AD461A-97C6-46CE-8374-4D48925607FE}' />
    </worksheet>
    <worksheet name='Crct_Faith_Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[rag_strategy_desc]' derivation='Attribute' name='[attr:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' field-type='quantitative' max='1.1000000000000001' min='0.69999999999999996' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max='4.4000000000000004' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <shape column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:rag_strategy_desc:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</run>
                <run>&gt;(&lt;</run>
                <run>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</run>
                <run>&gt;)&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='479' />
                <format attr='maxheight' value='479' />
                <format attr='minwidth' value='434' />
                <format attr='maxwidth' value='434' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] * [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk])</cols>
      </table>
      <simple-id uuid='{1F4F2F8F-3B5A-43B4-89FD-330CE0752F18}' />
    </worksheet>
    <worksheet name='Crct_Faith_Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parameter_2]' derivation='None' name='[none:parameter_2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Parameter 2' datatype='integer' name='[parameter_2]' role='dimension' type='ordinal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' direction='DESC' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='103' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='95' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='120' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='132' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='196' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]))))</rows>
        <cols>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1E650C3A-B94A-4FA7-900D-C0129B1BE3FC}' />
    </worksheet>
    <worksheet name='Rerank_Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='rag_strategy_main' datatype='string' name='[Rag Strategy (copy)_2301057942909206530]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='SPLIT([rag_strategy_desc], &apos;_&apos;,1)' />
            </column>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Rag Strategy (copy)_2301057942909206530]' derivation='None' name='[none:Rag Strategy (copy)_2301057942909206530:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[reranker]' derivation='None' name='[none:reranker:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column datatype='string' name='[reranker]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' member='&quot;Fusion&quot;' />
                <groupfilter function='member' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='103' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='95' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk]' value='81' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='120' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='132' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]))</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk])</cols>
      </table>
      <simple-id uuid='{D0B6D8B6-80BF-426D-BF33-556668EA4580}' />
    </worksheet>
    <worksheet name='Response_Details'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='Query Concat' datatype='string' name='[Calculation_883268482761932800]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[query_num]+&quot;_&quot;+ [query]' />
            </column>
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_883268482761932800]' derivation='None' name='[none:Calculation_883268482761932800:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_answer]' derivation='None' name='[none:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='None' name='[none:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Sum' name='[sum:faithfulness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_883268482761932800:nk]' member='&quot;ACME_UTD_SPD_019_is dialysis covered by united&quot;' />
              <groupfilter function='member' level='[none:Calculation_883268482761932800:nk]' member='&quot;ITPEU_SPD_001_My disabled daughter is 28 years old. Is she covered?&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='91' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]' value='380' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]' value='244' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='on' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]))))))</rows>
        <cols>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</cols>
      </table>
      <simple-id uuid='{EC143CA9-1B4A-4018-BE88-2D0076F3F109}' />
    </worksheet>
    <worksheet name='Response_Stability'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='MAX([Correctness]) - MIN([Correctness])' datatype='real' name='[Calculation_1338132046159257600]' role='measure' type='quantitative' user:unnamed='Response_Stability'>
              <calculation class='tableau' formula='MAX([correctness]) - MIN([correctness])' />
            </column>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column-instance column='[correctness]' derivation='Max' name='[max:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1338132046159257600]' derivation='User' name='[usr:Calculation_1338132046159257600:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='137' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='396' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk])</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6AE635A1-F8DA-43AE-89E2-3AFDDCDBF5CC}' />
    </worksheet>
    <worksheet name='Response_Stability_Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='MAX([Correctness]) - MIN([Correctness])' datatype='real' name='[Calculation_1338132046159257600]' role='measure' type='quantitative' user:unnamed='Response_Stability'>
              <calculation class='tableau' formula='MAX([correctness]) - MIN([correctness])' />
            </column>
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='Attribute' name='[attr:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column-instance column='[correctness]' derivation='Max' name='[max:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1338132046159257600]' derivation='User' name='[usr:Calculation_1338132046159257600:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]' field-type='quantitative' max='5.287234042553191' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]' scope='cols' value='Correctness (Max-Min)' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query_num:nk]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] * [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk])</cols>
      </table>
      <simple-id uuid='{4A1D2407-87A5-466D-894C-08E12863A911}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crct_Faith_Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C01DBAD0-2FBF-494C-B6F6-5CD504D2F1A6}' />
    </window>
    <window class='worksheet' name='Crct_Faith_Table'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3A80EC4-7CC8-429D-98DA-0F2A462457F4}' />
    </window>
    <window class='worksheet' name='Rerank_Table'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1674F5E-82F0-42A0-8222-67CCCCF64FDF}' />
    </window>
    <window class='worksheet' maximized='true' name='Crct_All_Strategy'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ABFB11D-4E4C-4BC0-BE41-16C69B6EEB4C}' />
    </window>
    <window class='worksheet' name='Crct_Faith_All_Strategy'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AAC108EE-327C-4A1E-9720-9CB0487D8AA8}' />
    </window>
    <window class='worksheet' name='Crct_Chunk_Size_Basic'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D4D7D42-0447-45A7-944C-C7E87ED843BF}' />
    </window>
    <window class='worksheet' name='Response_Stability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B03B51F-DC39-4AF7-93CE-135DFE62D965}' />
    </window>
    <window class='worksheet' name='Response_Stability_Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25DAD5BD-ABFF-4F8B-94E3-0887A78330ED}' />
    </window>
    <window class='worksheet' name='Response_Details'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card mode='checkdropdown' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3009B84-9A7F-4C3E-BEA8-D610ACA7475C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crct_All_Strategy' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crct_Chunk_Size_Basic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_All_Strategy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rerank_Table' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Response_Details' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Response_Stability' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Response_Stability_Plot' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
