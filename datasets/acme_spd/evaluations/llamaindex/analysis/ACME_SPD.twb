<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' inline='true' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03' name='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shthanka.ORADEV/Oracle Content/Gen AI/rag_tester_llidx/datasets/acme_spd/evaluations/llamaindex/data/ACME_SPD_S001_01_GM_gpt-4_EM_text-embedding-3-large_C_512_K_3_RR_COHERE_N_10_2024-04-12.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
          <database-filter>
            <expression op='='>
              <expression op='*' />
            </expression>
          </database-filter>
          <table-filter>
            <expression op='='>
              <expression op='Responses' />
            </expression>
          </table-filter>
          <columns header='yes'>
            <column datatype='string' name='query_num' />
            <column datatype='string' name='query' />
            <column datatype='string' name='expected_answer' />
            <column datatype='string' name='generated_answer' />
            <column datatype='real' name='correctness' />
            <column datatype='real' name='faithfulness' />
            <column datatype='string' name='rag_strategy' />
            <column datatype='string' name='rag_strategy_desc' />
            <column datatype='integer' name='parameter_1' />
            <column datatype='integer' name='parameter_2' />
            <column datatype='string' name='parameter_3' />
            <column datatype='string' name='parameter_4' />
            <column datatype='string' name='parameter_5' />
            <column datatype='string' name='model' />
            <column datatype='string' name='embed_model' />
            <column datatype='string' name='eval_model' />
            <column datatype='integer' name='embed_dimensions' />
            <column datatype='string' name='reranker' />
            <column datatype='string' name='run_date' />
            <column datatype='string' name='eval_name' />
            <column datatype='string' name='Path' />
            <column datatype='string' name='Sheet' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
          <database-filter>
            <expression op='='>
              <expression op='*' />
            </expression>
          </database-filter>
          <table-filter>
            <expression op='='>
              <expression op='Responses' />
            </expression>
          </table-filter>
          <columns header='yes'>
            <column datatype='string' name='query_num' />
            <column datatype='string' name='query' />
            <column datatype='string' name='expected_answer' />
            <column datatype='string' name='generated_answer' />
            <column datatype='real' name='correctness' />
            <column datatype='real' name='faithfulness' />
            <column datatype='string' name='rag_strategy' />
            <column datatype='string' name='rag_strategy_desc' />
            <column datatype='integer' name='parameter_1' />
            <column datatype='integer' name='parameter_2' />
            <column datatype='string' name='parameter_3' />
            <column datatype='string' name='parameter_4' />
            <column datatype='string' name='parameter_5' />
            <column datatype='string' name='model' />
            <column datatype='string' name='embed_model' />
            <column datatype='string' name='eval_model' />
            <column datatype='integer' name='embed_dimensions' />
            <column datatype='string' name='reranker' />
            <column datatype='string' name='run_date' />
            <column datatype='string' name='eval_name' />
            <column datatype='string' name='Path' />
            <column datatype='string' name='Sheet' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Responses+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query_num</remote-name>
            <remote-type>130</remote-type>
            <local-name>[query_num]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>query_num</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>query</remote-name>
            <remote-type>130</remote-type>
            <local-name>[query]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>query</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected_answer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[expected_answer]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>expected_answer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generated_answer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[generated_answer]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>generated_answer</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>correctness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[correctness]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>correctness</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>faithfulness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[faithfulness]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>faithfulness</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rag_strategy</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rag_strategy]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>rag_strategy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rag_strategy_desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rag_strategy_desc]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>rag_strategy_desc</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[parameter_1]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[parameter_2]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_3]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_4]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter_5</remote-name>
            <remote-type>130</remote-type>
            <local-name>[parameter_5]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>parameter_5</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>embed_model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[embed_model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>embed_model</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eval_model]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>eval_model</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>embed_dimensions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[embed_dimensions]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>embed_dimensions</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reranker</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reranker]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>reranker</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[run_date]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>run_date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eval_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[eval_name]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>eval_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Responses+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Responses_42D1376E7714462C833D266E39621427]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;' value='Total Correctness' />
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;' value='(Max - Min) Correctness' />
          <alias key='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_883268482765733889:qk]&quot;' value='(Max - Avg)' />
        </aliases>
      </column>
      <column caption='Query Concat' datatype='string' name='[Calculation_883268482761932800]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[query_num]+&quot;_&quot;+ [query]' />
      </column>
      <column caption='rag_strategy_main' datatype='string' name='[Rag Strategy (copy)_2301057942909206530]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([rag_strategy_desc], &apos;_&apos;,1)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Responses' datatype='table' name='[__tableau_internal_object_id__].[Responses_42D1376E7714462C833D266E39621427]' role='measure' type='quantitative' />
      <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
      <column caption='Eval Name' datatype='string' name='[eval_name]' role='dimension' type='nominal' />
      <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
      <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
      <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Parameter 2' datatype='integer' name='[parameter_2]' role='dimension' type='ordinal' />
      <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
      <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
      <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
      <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
      <column caption='Run Date' datatype='string' name='[run_date]' role='dimension' type='nominal' />
      <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
      <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:parameter_1:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>512</bucket>
            </map>
            <map to='circle'>
              <bucket>4</bucket>
            </map>
            <map to='diamond'>
              <bucket>1024</bucket>
            </map>
            <map to='plus'>
              <bucket>128</bucket>
            </map>
            <map to='square'>
              <bucket>5</bucket>
            </map>
            <map to='times'>
              <bucket>256</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rag_strategy_desc:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Basic_Rerank&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Basic&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SWindow_Basic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Recursive_Basic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SWindow_Rerank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Recursive Retrieval&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Fusion_Basic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fuse Vector and BM25 Searches with Reciprocal Rerank&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Recursive_Rerank&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='query_num' />
        <field-sort-custom-order field='Calculation_883268482761932800' />
        <field-sort-custom-order field='query' />
        <field-sort-custom-order field='expected_answer' />
        <field-sort-custom-order field='generated_answer' />
        <field-sort-custom-order field='correctness' />
        <field-sort-custom-order field='faithfulness' />
        <field-sort-custom-order field='rag_strategy' />
        <field-sort-custom-order field='Rag Strategy (copy)_2301057942909206530' />
        <field-sort-custom-order field='parameter_1' />
        <field-sort-custom-order field='parameter_2' />
        <field-sort-custom-order field='model' />
        <field-sort-custom-order field='run_date' />
        <field-sort-custom-order field='eval_name' />
        <field-sort-custom-order field='rag_strategy_desc' />
        <field-sort-custom-order field='Calculation_2301057942909087745' />
        <field-sort-custom-order field='eval_model' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='Sheet' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Responses' id='Responses_42D1376E7714462C833D266E39621427'>
            <properties context=''>
              <relation all='true' connection='excel-direct.17dbl3d0ocoeek1e6fnzc1yey002' include-siblings='false' is-recursive='false' name='Responses+' path='' type='batch-union'>
                <database-filter>
                  <expression op='='>
                    <expression op='*' />
                  </expression>
                </database-filter>
                <table-filter>
                  <expression op='='>
                    <expression op='Responses' />
                  </expression>
                </table-filter>
                <columns header='yes'>
                  <column datatype='string' name='query_num' />
                  <column datatype='string' name='query' />
                  <column datatype='string' name='expected_answer' />
                  <column datatype='string' name='generated_answer' />
                  <column datatype='real' name='correctness' />
                  <column datatype='real' name='faithfulness' />
                  <column datatype='string' name='rag_strategy' />
                  <column datatype='string' name='rag_strategy_desc' />
                  <column datatype='integer' name='parameter_1' />
                  <column datatype='integer' name='parameter_2' />
                  <column datatype='string' name='parameter_3' />
                  <column datatype='string' name='parameter_4' />
                  <column datatype='string' name='parameter_5' />
                  <column datatype='string' name='model' />
                  <column datatype='string' name='embed_model' />
                  <column datatype='string' name='eval_model' />
                  <column datatype='integer' name='embed_dimensions' />
                  <column datatype='string' name='reranker' />
                  <column datatype='string' name='run_date' />
                  <column datatype='string' name='eval_name' />
                  <column datatype='string' name='Path' />
                  <column datatype='string' name='Sheet' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Crct_All_Strategy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='level-members' level='[none:rag_strategy_desc:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' member-value='&quot;GPT-4&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='49' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='69' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='356' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='36' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='on' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='10' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='10' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-weight' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk])</cols>
      </table>
      <simple-id uuid='{A4BF51F3-68D5-4F6C-8BB3-14952E71FB41}' />
    </worksheet>
    <worksheet name='Crct_Chunk_Size_Basic'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='level-members' level='[none:model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rag_strategy_desc:nk]' member='&quot;Basic&quot;' />
              <groupfilter function='member' level='[none:rag_strategy_desc:nk]' member='&quot;Basic_Rerank&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='78' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='40' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='460' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]))</cols>
      </table>
      <simple-id uuid='{CE57F65F-543B-4FD1-89C3-CC2CE4025AD0}' />
    </worksheet>
    <worksheet name='Crct_Faith_All_Strategy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[expected_answer]' derivation='Attribute' name='[attr:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='Attribute' name='[attr:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]'>
            <groupfilter function='level-members' level='[none:rag_strategy_desc:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' member-value='&quot;GPT-4&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='49' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='69' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='104' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='356' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='36' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='on' />
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='on' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='10' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='10' />
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
            <format attr='font-weight' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <size column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:expected_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:generated_answer:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk])</cols>
      </table>
      <simple-id uuid='{38AD461A-97C6-46CE-8374-4D48925607FE}' />
    </worksheet>
    <worksheet name='Crct_Faith_Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[rag_strategy_desc]' derivation='Attribute' name='[attr:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' field-type='quantitative' max='1.1000000000000001' min='0.69999999999999996' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' field-type='quantitative' max='4.4000000000000004' min='3.3999999999999999' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <shape column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:rag_strategy_desc:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</run>
                <run>&gt;(&lt;</run>
                <run>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</run>
                <run>&gt;)&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='479' />
                <format attr='maxheight' value='479' />
                <format attr='minwidth' value='434' />
                <format attr='maxwidth' value='434' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] * [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk])</cols>
      </table>
      <simple-id uuid='{1F4F2F8F-3B5A-43B4-89FD-330CE0752F18}' />
    </worksheet>
    <worksheet name='Crct_Faith_Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[parameter_2]' derivation='None' name='[none:parameter_2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Parameter 2' datatype='integer' name='[parameter_2]' role='dimension' type='ordinal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' direction='DESC' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='103' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='95' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='120' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='132' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' value='196' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]' value='88' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]))))</rows>
        <cols>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1E650C3A-B94A-4FA7-900D-C0129B1BE3FC}' />
    </worksheet>
    <worksheet name='Rerank_Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='rag_strategy_main' datatype='string' name='[Rag Strategy (copy)_2301057942909206530]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='SPLIT([rag_strategy_desc], &apos;_&apos;,1)' />
            </column>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Avg' name='[avg:faithfulness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Rag Strategy (copy)_2301057942909206530]' derivation='None' name='[none:Rag Strategy (copy)_2301057942909206530:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[reranker]' derivation='None' name='[none:reranker:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column datatype='string' name='[reranker]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' member='&quot;Fusion&quot;' />
                <groupfilter function='member' level='[none:Rag Strategy (copy)_2301057942909206530:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='103' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='95' />
            <format attr='text-format' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk]' value='81' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='120' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]' value='132' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]))</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk])</cols>
      </table>
      <simple-id uuid='{D0B6D8B6-80BF-426D-BF33-556668EA4580}' />
    </worksheet>
    <worksheet name='Response_Details'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='Query Concat' datatype='string' name='[Calculation_883268482761932800]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[query_num]+&quot;_&quot;+ [query]' />
            </column>
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column caption='Expected Answer' datatype='string' name='[expected_answer]' role='dimension' type='nominal' />
            <column caption='Faithfulness' datatype='real' name='[faithfulness]' role='measure' type='quantitative' />
            <column caption='Generated Answer' datatype='string' name='[generated_answer]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_883268482761932800]' derivation='None' name='[none:Calculation_883268482761932800:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_answer]' derivation='None' name='[none:expected_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[generated_answer]' derivation='None' name='[none:generated_answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[parameter_1]' derivation='None' name='[none:parameter_1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy]' derivation='None' name='[none:rag_strategy:nk]' pivot='key' type='nominal' />
            <column-instance column='[rag_strategy_desc]' derivation='None' name='[none:rag_strategy_desc:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Parameter 1' datatype='integer' name='[parameter_1]' role='dimension' type='ordinal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column caption='Rag Strategy' datatype='string' name='[rag_strategy]' role='dimension' type='nominal' />
            <column datatype='string' name='[rag_strategy_desc]' role='dimension' type='nominal' />
            <column-instance column='[correctness]' derivation='Sum' name='[sum:correctness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[faithfulness]' derivation='Sum' name='[sum:faithfulness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_883268482761932800:nk]' member='&quot;ACME_UTD_SPD_019_is dialysis covered by united&quot;' />
              <groupfilter function='member' level='[none:Calculation_883268482761932800:nk]' member='&quot;ITPEU_SPD_001_My disabled daughter is 28 years old. Is she covered?&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:model:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:model:nk]' member='&quot;COMMAND&quot;' />
                <groupfilter function='member' level='[none:model:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</column>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='91' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]' value='39' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]' value='380' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]' value='244' />
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='72' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='on' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:correctness:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk] / ([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]))))))</rows>
        <cols>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</cols>
      </table>
      <simple-id uuid='{EC143CA9-1B4A-4018-BE88-2D0076F3F109}' />
    </worksheet>
    <worksheet name='Response_Stability'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='MAX([Correctness]) - MIN([Correctness])' datatype='real' name='[Calculation_1338132046159257600]' role='measure' type='quantitative' user:unnamed='Response_Stability'>
              <calculation class='tableau' formula='MAX([correctness]) - MIN([correctness])' />
            </column>
            <column-instance column='[correctness]' derivation='Avg' name='[avg:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column-instance column='[correctness]' derivation='Max' name='[max:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query]' derivation='None' name='[none:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1338132046159257600]' derivation='User' name='[usr:Calculation_1338132046159257600:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]&quot;</bucket>
              <bucket>&quot;[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' direction='DESC' measure-to-sort-by='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]' value='137' />
            <format attr='height' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]' value='396' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk])</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] / [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6AE635A1-F8DA-43AE-89E2-3AFDDCDBF5CC}' />
    </worksheet>
    <worksheet name='Response_Stability_Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Responses+ (ACME_UTD_SPD_ALL_S001_M_COMMAND-R_C_128_K_3_2024-04-03)' name='federated.0miusjz1qfs8mh11xvr1k0swrb2f' />
          </datasources>
          <datasource-dependencies datasource='federated.0miusjz1qfs8mh11xvr1k0swrb2f'>
            <column caption='MAX([Correctness]) - MIN([Correctness])' datatype='real' name='[Calculation_1338132046159257600]' role='measure' type='quantitative' user:unnamed='Response_Stability'>
              <calculation class='tableau' formula='MAX([correctness]) - MIN([correctness])' />
            </column>
            <column-instance column='[query]' derivation='Attribute' name='[attr:query:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='Attribute' name='[attr:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Correctness' datatype='real' name='[correctness]' role='measure' type='quantitative' />
            <column-instance column='[correctness]' derivation='Max' name='[max:correctness:qk]' pivot='key' type='quantitative' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[query_num]' derivation='None' name='[none:query_num:nk]' pivot='key' type='nominal' />
            <column caption='Query' datatype='string' name='[query]' role='dimension' type='nominal' />
            <column caption='Query Num' datatype='string' name='[query_num]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1338132046159257600]' derivation='User' name='[usr:Calculation_1338132046159257600:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]' field-type='quantitative' max='5.287234042553191' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk]' scope='cols' value='Correctness (Max-Min)' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='Perpetua Titling MT' />
            <format attr='font-size' field='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <color column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query_num:nk]' />
              <tooltip column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[attr:query:nk]' />
              <text column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
              <lod column='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[max:correctness:qk]</rows>
        <cols>([federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk] * [federated.0miusjz1qfs8mh11xvr1k0swrb2f].[usr:Calculation_1338132046159257600:qk])</cols>
      </table>
      <simple-id uuid='{4A1D2407-87A5-466D-894C-08E12863A911}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crct_Faith_Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C01DBAD0-2FBF-494C-B6F6-5CD504D2F1A6}' />
    </window>
    <window class='worksheet' name='Crct_Faith_Table'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3A80EC4-7CC8-429D-98DA-0F2A462457F4}' />
    </window>
    <window class='worksheet' name='Rerank_Table'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Rag Strategy (copy)_2301057942909206530:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:reranker:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1674F5E-82F0-42A0-8222-67CCCCF64FDF}' />
    </window>
    <window class='worksheet' name='Crct_All_Strategy'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ABFB11D-4E4C-4BC0-BE41-16C69B6EEB4C}' />
    </window>
    <window class='worksheet' name='Crct_Faith_All_Strategy'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:faithfulness:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AAC108EE-327C-4A1E-9720-9CB0487D8AA8}' />
    </window>
    <window class='worksheet' maximized='true' name='Crct_Chunk_Size_Basic'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[avg:correctness:qk]' type='color' />
            <card param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:generated_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_2:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D4D7D42-0447-45A7-944C-C7E87ED843BF}' />
    </window>
    <window class='worksheet' name='Response_Stability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B03B51F-DC39-4AF7-93CE-135DFE62D965}' />
    </window>
    <window class='worksheet' name='Response_Stability_Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[:Measure Names]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25DAD5BD-ABFF-4F8B-94E3-0887A78330ED}' />
    </window>
    <window class='worksheet' name='Response_Details'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='249'>
            <card mode='checkdropdown' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[sum:faithfulness:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:Calculation_883268482761932800:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:expected_answer:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:model:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:parameter_1:ok]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:query_num:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy:nk]</field>
            <field>[federated.0miusjz1qfs8mh11xvr1k0swrb2f].[none:rag_strategy_desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3009B84-9A7F-4C3E-BEA8-D610ACA7475C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crct_All_Strategy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Chunk_Size_Basic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_All_Strategy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_Plot' width='192'>
      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
      J6Lc1uf/AwWpBRE+5OZQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crct_Faith_Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rerank_Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWkElEQVR4nO3deVCbeX7n8bcQQhziNoeMDZjbxsYGcxlj47tpj+me6elkcuykZ3ZrnZqd
      VFeSqdT8s1u1tZXU7h+ZVGqzk008lexke2eS7e2edpuxDbYBH5jDnAZjcxgwp7gkBEKAJCTt
      H7h7oLutnu64JYbn+/rPeqSH7/NYH/0e/X4//R6V2+12I4RC+fm6ACF8SQIgFE0CIBRNAiC2
      tcnJSY/bJQBC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELR
      JABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQAQtEkAELRJABC0SQA
      QtEkAELRJABC0SQAQtFUn7xDzOetpivEbxKLxUJoaOgLt38qAEJsJ5OTk+zcufOF2+USSCia
      BEAomgRAKJq/581uWqp+TuOgBa2fE6cazrz2feLtnfz8WjMqlQq30050Zim/dTqHqab/y193
      xfDfLp4BoPMXf8mDsDf4bmkU/+nP/gt/9td/RbQa3OZn/OBH/8J//c8/RKtWsTzVxt/8Ypwf
      /ofXwbVGzU//gt74N/j++QMAzHdepUV3gviev+dvGu0UpESj8ddQ/LVvsTcu6ONqB+vf4c/f
      eUxOgouA3G/x/Yq8L3Qylgx91LX246cNo7TsOOFa1Rc7m+I3jscATLf+P+5aMvnB9/PXH1gz
      Ylw08T9/cpe3/+PbBD1/fzT+/EdU9adQHJ/L8nvvsOg+Q5jKggsd6gANmsAISlJs/LJxgrdK
      Exg2OUmK1aBVr+9g3BJG7OoAs06IUftzOO81+pqvcLVrB1/L0RMZmUBseAiJSUkUhOVz8WQS
      uB387H/8d8L+3Q9ICF6vI3X/AQ4c3sWfXCzkz//ib+ELB8BKQUUF0dYxmjqHOFaU+oJn2hno
      nyQ9I/kL7d9X7KPN/FPDDPEhWkpeOcdEWw298yp++/wplgz91LX24bStkF5ygeydwb4u16s8
      XgLdq+ngxKn8Xz3gH03EQieO5MKP3/wAxSW53L/XyYLVybeORFLdYcQ8ZiJhbxJOpwswk3rs
      9+m/fRVYRa0OISAg8PmrrdhW/DhXGEN1s+H5Yyq+9oc/ZPHW33F/yPzZxak0nMqP4cP6Nt67
      dIlL71xlFRhsu8FPfvIORa+8+SVOh4W6ykpu1HWTmLEb00gPv6ys5INbTdhne3n3vSv88k47
      YGfKYGJ5qo/337/8/LGtyzjn5twbFVRUnCM6AHKOnCZNHwlASHw6FRUVvHI8G/vymo8r9T6P
      AYiMCGTevLzpMXV4JGtzM5seW1wwExUTjXnNydFX36C35joLLogLDsRsmgcWWdPs41DwNA/6
      ptDp47Gs2ACwDnRz834NVx8v0HX7+oa9+vO7b/+Anvf/ngGj/TPrWzRbiI5O4s2LF7n47a8R
      CKTmnWFfyCLP5j/7NZ6FcrKigjNluRiGhpk3m1GpVMwOjWAPjyUi0A+VbZXV588e6J/l3De/
      zoWyL9bSeJs2WkdX9RXef+8y05v/O1GpVIz1d9FrDCE3Lcw3BfqQxwCUvfk73Lz0lwzMLOF2
      OnjS2cFSWC4lO4apbO5jzQXzo938Q9UU/6Y8G7fbDcEp7FE/wxIUA8E6QpxOsCzgDg3llfN5
      1DSPEx0AIYHBOHHROePiT753kYsX3yY/cIJHJgfgxu0G/MP493/0Flf+z7sf17S8vAy4mRvs
      pNW+l28e3rG5aJUfR3/vj7E1/BPPLF90iON5C1DbgDsoDIfDhsvtR0iwFrvVyhpu7NZlPvqc
      TM+I4eYHV7Z8C2BThXLu/AWOpesYX9j8wbA88Yj5wD3k7k32TXE+9rkDYQ7LNNeuVjO7rObE
      hddJi9UBboY771Lb0keIPpPXXjlOsL+LB/ebyC4+gnNhnqDoaOwT3dQOuilLUdG7qqcwLQyj
      0UZURAA3r1xjX14a16o7ee0Pvk18oJn3Lr3LSkI2pxJhRZ9P2g4tAGvmKcyB8ZgeXuf2wzEA
      ErJLOX90Hxu/pq5MPaamf41Xj+Vgn35M/YiGM0XpKP2rrH3RwJ36dgL1mZTmJtJ0o5o5G6Dd
      QUFmKC1dwwAkHyjhQHK0b4t9yT5vIExGgsW2JiPBQnggARCKJgEQiiYBEIr2OVMhxG+q9e5i
      4XA4PJ4LaQGEokkAhKJJAISiSQCEokkAhKJJL5ACmMZ7edLdTWjeb5ET56ClrgaTzYU7NIHj
      aUHUtAzi57KTVVJO6vP5V0ohAVCAqF1ZHNXY6QLAn/wT5ahw8KClG+vsPGlHTpLkHGRg0QYS
      ALG9qXBap2l9NMG+w7loLRN0ddxj1AX789N9XZzXyXcAxVmj88kkhcV5hGlUjAwMkVF0gpOF
      STztn/J1cV4nLYACTD99SMdTAzBJcG4eNtM0N6qqIFRPeXE+LfV36VdHUHIkw9elep38HmCb
      kqkQ62ZnZ4mJiXnhdrkEEoomARCKJgEQiiYBEIomvUDbVHCwslZ4exGNRuPxXEgLIBRNAiAU
      TQIgFE0CIBRNAiAUTXqBFMDQ30Fr3xi2FTslF97k6Z13WVgLImxnBmU5cVy7cgunNpD8ExfQ
      63xdrXfJXCAFcLvdqFQqZnoaWNxdgvFJE0VFxQBMddzFnFJKVvj2vBj4vLVBpQVQAJXKTX9X
      E86wDPaGweLqHJWVV/CPTCLNf43B5hv0LS+ReOAUualRvi7XqyQACjDxqI3APQUkhvoDS0Ql
      FnEoKYwbN++zMysKU0wiefFWGh7OggRAbDdrOOm6fZ2HwIGSc6iWe7h2fZ6c4jJCogOJ7qjn
      5pAfZaeO+rpUr5PvAGJbk/sDCOGBBEAomgRAKJoEQCia4nuBJicnfV3CV8LhcPi6hC3BarV6
      PBfSC7RNyaoQ62RVCCE8kAAIRZMACEWTAAhFU3wv0EZT7Xeom1gkyG4jq/Q8WXH/mpUVlhjo
      s5CeqX9p9X1Zm+8PAJ33rjG54CAi+TAHY2zc6xjAaV8ltfAcWfHB9D6oom9pJ6+fyvF16V85
      CcAmoZysKCOeORobJnCGRXH3ThNhKbkczojjYX0NU64YitIjcUYnE2p5hlGbDJZxZgYH2XXw
      IF3376OOy+B4rp4AbQAjIyMkJiVhmRyHeD1jLXcZXw3j1PHDaFTeOarN9wcwYtdkcv5CKg9a
      HhAcW0B5eSorc08YWFzDYR5mISSFWMeqd4rzMbkE2sRCXWUllR/WE5eZxIO6W5hsTlpu1ND/
      sAlXagmnivaxbBjBZAe7aQTDEvS23id8bwGa6V6MftHs2RULLDEyYiLYYuDpgove8Un8Rh5w
      r9/E8ngL9b1m3xyiy46/9qOWTYVKpWJi8BEDJh05KTq6+o3kZ7948th2Iy3AJqGcKD/E8P0u
      onQapgJCOXGqHJ3NwuxoDyt+zz+yVS7W1pzMzs5BKETsSic5Ohh74H5ORVm5f7eBmK/nAhCz
      by9DDbWow7NxOYbZV3SC0lQdSys+Gn7xi2TR1IbDHoJl2cXy5BPmtcnk7NKBY55F0xw3q2oZ
      H5sn5WAOcdv8J5ISgA10ej1owikpK2Tg6SiFR/Kpq72OOiKRYyVFGOtrqHXFcKroII9vVREe
      u5tdOiB+/Tpf5V6iramN6NRsAtGRlKQBv3CidRFEZ+kJ08QScb+W68NqCo4eI8xLx7X5/gCl
      5GXHUXe7g8PHSrHN9TPeU8/4I0jcV8jJ8nLAztjo/LZ/84OMBG9bMhK8TkaChfBAAiAUTQIg
      FE0CIBRN8b1A2/X3AGLd6uoqZvOLx1ykF0hsa7IqhBAeSACEokkAhKJJAISiSQA2MDx5wOXK
      X/Lh5WvMzvZR3zULLPK//u5n2ICxtmYMDjsD/c9euI/2jg5vlftrs48285N/qaSy8gZGu6+r
      2VoU3w260fTsPFl5R8lMiESFnYGBh9gnA0jPSmbI7GbBqaJYAyMBWuzGSR4OP2Nmbo2ys8dR
      m0e509TFnDOIvFwnPc13GVsOpux4HkaDiV3xWjqfzHPoQDwTE8skJER77biMc27OvVFBUoDX
      /uRvDGkBNjhUehLHWAcffFCN2REAOBiesJNzNIWloWH83P6AndERA3bTOI7ovZzO8qd/Flof
      DnDy1fNkJkSw+PQBCztyOZm7g6YHI4xPDGMeHGF0wYR1sp9pl3fv4auN1tFVfYX337vMtMyR
      20QCsMHsjJHMghMcS/VnbAESAlT0OiBMo8c934A7dM+GZ/sTExNJYGAg4Mat8kONm9VV26f2
      q1e7aVxwczrBj+pHNjJ3B3ntmABsqlDOnb/AsXQd4wtyDbSRXAJtEMAydVXXCEnI4ugOcGsS
      mZta/4yIi8sieE8kYCcxSU9AKEQFADo9elQEpeupvl5DXEo6YWmJhDffpW40mLLjRQTZQjGO
      rhGSHE7y/AQhXj6u6IgA7lRfJ1CfSaleroM2kpFgsa3JSLAQHkgAhKJJAISiSQCEon2qF0jm
      x28Pcn+AdXJ/AIWSVSHWyaoQQnggARCK9rkjwa5VMzXXr/HM5OLsN14nyt+PgeYq2oaNBEYm
      8o2vH+Tyjz9kJfhXWVoO2skff/vCpv24V6bonQ5kb3LEyz8KIb4kjwFwW0b4qx9f5rXv/lvO
      xgYz2l3LY20hen8j0YW/zfHgB/zoxzf53u+8RVx8ED/96SW+852LzMzOfmJPTkabq7nnPrGl
      A/DR8ujBzlV27z9DXlrkC55pZ6B/kvSMZG+W96W57BYeNDRhC9lFacFeJh638HjUSKg+jaMH
      0xjvbeXx2BL5x04QFejrar3LYwDu/+Kfyf/dPyUjbn3+SGLOWRKBkecdRdrAYDR+4cTFb57c
      FfuJLx1z03PoInQw//IK/2qsL48eOv2EnrlVlqaHuNvaQ0xqLgXpkdTX3GYlLJmzxekEBGjB
      baPldh3moN2cLc72dfEvNGuYJav4JO6RRp7MgnXJRXl5OQC26S76rXGcOXWANQV2h3gMgHHO
      yi7dR5OnXPS33MYYkslOoOnaz7Gmp/D29177zNfWvHeJQVMQhbnx1DYO4W9+Qs/KIJeMh7n4
      5umXfBgvy/ry6FEhOtKzEnCzjB9+tDY0sjcig3GbjqKknXw0Jdo500/EwRPkhHhpof8vKS4p
      hbWVOdqNOrLT4d6dJ1Sbl9h7+AjOUQtuu4lbd8cpKS0mgK19LC+bxwAUHsvmn+vaOPzmYcAP
      7dJTJjV57ASKz/8e3zz04suZ029e5KO3+aECMHe+z7vz+Vw8mfTyqn/p1luA2FUj99qHmXGa
      KTt3Fs31W6yFp3Hu6AoddfWEffMkACqVCj+/rf+GcSxM0v7MSn5JLmqg/M3v4HLaqL3TzN7o
      AFL3FrHLb5r7Lf2UlWT6ulyv8hgAfeG3ODL9Dn97qR1/wL1m48g3tMwPmZnHDPwqAE7bHMPD
      RmxON1r1p98USxYL5vl53CRt2c8YnT6EuspK/AJ0FB8/jnZhmNobt9HvSScQG40tzfgnZxBF
      AIlJepKSomi5XcfQFr8E6m5tZdYRwE3DIPsKixhvbWHB5SQgMpGdmXHcqr3BE1wk55T5ulSv
      k4GwbUoGwtbJQJgQHkgAhKJJAISiSQCEosmP4rcpjUbj6xK2BD8/P4/nQgKwTUkA1qnVao/n
      Qi6BhKJJAISiSQCEokkAhKJJAJRgyUBl5a+WR1+ZN9DY8WR9m8tOR/1NrtU0suL0bZm+IL1A
      CmAeHyLlaAXZUev/HhiaR+1eX8R3aWaCHdml7HMP09o9w9FDsT6s1PukBVAAs2mJrvuV3G0f
      wA2kZ+3D//mUXF38HnaFunncO0dq2g6f1ukL0gIoQHLJKyTjZrarhtaJJAoSNqwQ7TDT+GCI
      3OLjBKl9V6OvSAAUYKSnme7hGWyrLo5fgMYblXSPTDExu0p25CJPZ+wYr02QfKCEA8neu3PN
      ViC/BxDbmiyPLoQHEgChaBIAoWgSAKFo0gu0Tcny6OucTqfHcyEB2KYkAOtcLpfHcyGXQELR
      JABC0SQAQtEkAELRJAAK4HbZGehsYnpp/d+msV5u3LjB4NQiuGy019dQ19iFQ4GTYiQACmCe
      Gidc58+0FcCOaUXLmTOnmBzsYbKzlZD9xyhKhfYnRl+X6nXSDaoAkTtTYHqJKQACSMvYg2Hw
      MVHxicTscNPdVMcz/DhUut/HlXqftAAKNNrXzqoukezUBKZGJsgsPsmx/F08G/zkra22P2kB
      FGD66UM6HnYyzSTBpTk8bOghRD9DX6ieI4kh3KuvRY2dxIMnfV2q18nvAbYpuT/AOrk/gBAe
      SACEokkAhKJJAISiKb4XaHJy0tclfCVkOvQ6q9Xqcbv0AoltTVaFEMIDCYBQNAmAUDQJgFA0
      CcAGS4Y+KisruXGvY1vNjXe7bPS21WN4/nuAhck+rl69wYzV+Zn3B1iaGqCtz+C7gr1IArDB
      ksFKQUUFRzP9aWgf/9fujYEt8iaanxwjItT/eQBWaOme4tyZItobmz6+P8Dp3HDau2fAbaPt
      8RCWqa1R+1dN8eMAL+KvVjM12E1n3ygOTTRnCvRcq2lDG7aTnGgbtowy9IY79IeWYX/0ATPW
      IA7ui6e5Z4zI+D2cLd6BYWoJq7GBtCMljLU2o89KouV+JzaHg/2lr5Ic6Z3TH7UrDaYWmQRw
      zRMWnYZGG05YiBpd/B5C1pbpfDBHak4WI93N7DlczEjnoFdq8zVpATaxUPuLn/G/b05RdFDP
      o0cPcThdsGpj4NEYR77xBhfOFhPwiVe5gmOpeL2c3fp4dGoV9tVVXM+37c+KoKdvikVXIPah
      R0xYHbgB2+qql4/tOT8Na6sfDQ651u8P0NxLVtFx4gNM1N7v4uHdW3R1t358ybSdSQuwSSin
      3vh91CM9dPQ8IyMpgcahJcKC1Ozev5vbH15Go4unJENHS1UlIavj7D5TRlBQECpg2WrFpXJj
      t66w9nyP/lF7Wa37R2KO/QE7Ag1oexpRBYV9fIcWbzD0tdHa3oaBCUJOnETraODDD7qJTi1g
      vLN50/0Bvvu9PwSWuHenH73OezX6iowEi21NRoKF8EACIBRNAiAUTQIgFE3xX4K36+8BxDqL
      xUJoaOgLtys+ANuVrAqxTlaFEMIDCYBQNAmAUDQJgFA0CcAGrtV56qqvUtvQhd1iYMRoB1y0
      t3cAsDw9zvznLLZgMGzBacRL01RVVVFVVYvJ7utithYJwAatTW3knnyVgrQoljX+TAyMwMoo
      Q92TTK/BwPAEgRo7A/3PXrgPw9SU9wr+NS1MPiO5qJzy8lNEfXIqq8LJbNAN0pJjqam8TEJW
      PsWxMbhd/cwNasg9k8zYiBWXWkUQdqYMJvSqaS4/NhJsmeVAxVusPKrmmcmG2RnEofRxPqxq
      Qa12klJwmqWxQQozQ3nnnpG3XkmkqVdF8aEErx3XgtlKz1AVJn06Rw6m4sWJqFuejAN8iovx
      1josqadZfdKIVaOhpCCb1sZGXOpEigvjuXenn9ydYNDnkb7UTju5MNFO3uHDtHd0kKBaZCG1
      jIxQC/fuDBKqteGn1eKvWsPtdqHLKiQp6Ks9ik+PA7iZ67nLWFQJuXrNV/vHtxAZB/gCnnbW
      U1l5lZaxFXYEQXqMH0Pz4EcQa1ODBO1OfsErVTjNY1yprKJ/cp6YtFR6qj/gygfVRKamkRGn
      pnvOxb70SJp6l0j8it/8nzTW20p1dTUNT63sjlLOm//XIS3ANiUjweukBRDCAwmAUDQJgFC0
      /w+ps90Juf1/PAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Response_Details' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Response_Stability' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Response_Stability_Plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbVElEQVR4nO2d2XNc153fP3fpHd1o7AsBcAd3kRQtaWTJVjKelKdc5alJpZKK35KXvOVh
      XpO3/Ad5SiXzlErlJalJYjtlezz2WJFk2fSIoiSSIAGQ2NFA7/ty15MHCJQsEUSz+6JxqT6f
      F1Sj+/7u79w+v77n3N/3/I4ihBBIJH2KetwOSCTHSdcBUK1WvfBDIjkWug4AOYKSHDe33/05
      T7aL3P71T1jYKHzpHYM7H917+uqjj+587Vi9B/5JJEdK1XCx1hYpbK+SZ5jVhyYDA2EahRS1
      VpCV5U9RYmOEFetrx8o5gOSlR1WDONVNokNzNKslYkPj1AppDFdDFRbVlsvF+bPPPFbp9ilQ
      pVIhkUh0Y0Ii6YpGowGujaoHEEqAWilHYniMVr2MqoURdhNLCRDWNWIDsT86VgaA5BtJrVZj
      YGDg0M/JOcARIYRgZfkhpgOJ5BDFXA5NV0kMTZDeXuf6zRs8uL9APCCIz14gv7rI3JVrbC8+
      YGb+CkuffsSZyzdolAsU09tYgRgD8QQnZ6bYXXnAcqrM+cs3mBqOHndTfYnrum19Ts4BjgjX
      alJquly6dBm9nmHo5GUuXbpCOrVBRLVYT+VwhCA+lGRz5Ql208ARLtXSLvcfbTA9O8vi/c9w
      FBVNC3B2/gKt/A4ra2u0DINKvUUwoB13M196ZAAcEWoghGLWWFx6THBoivSTBzx6tEBiaIzE
      2BS1UhFcG8PRCKk2kViAtaUl5q69Q2nrIXXD5sb1y2xtpWjUyzxeWkKJJjl96hTRcJCLF+fZ
      2Ng47ma+9Mg5wBEihEAIgaIoe68Bpb0DQVG+8q89O4qi/FHuRVHasth3tNsvn84BqtVqR0mt
      RqPx3Pdd10VVvbnRfLkz+cWWX30Cb4LjZW3fYf0S9vrm0wCIx+MdO/S8SLNtG03TPGm4bdvo
      ujfzdq9sOY6Dqqq+at/+BNCLHx4/XvN223fYHcCyrKOfA8hbtMSvKIpy9AGwPw6WSPyG67ry
      KZCkv2krAIQQrD5epFxr4lgtnjxZxXbb+1Xff3IhkfgNVVXbywQL1yKXLzE5dxZXOER0hYZp
      EwuouK6LbdsHHuvlJPGwcx2HLdd1PRvieeXTvj/tZkOfhx+veTvta+dctm23FwAKMJiIk9re
      IhpQ2MoVuTY1i6Zpe1H0nJm9EOLp57rFj08k5FOg3ttqp32H9UvY++7aCwAtyPyly09fT82c
      bOewp47IIZDEj2iaJifBkv7myAPAyzGyROIljuP0JhEmh0ASP9KTIZDs/BI/I4dAkr6lJ5lg
      eQeQ+JWeaIHkHEDiV3omhpNI/IgQQqpBJf1LTwJAZoIlfqVtMVw3GKUsejhKMNb5umHhuhiN
      OrtVi7mJIVS184CqGi3KlV0CpklyeI5QJNyxLa8QwsGpLWE2mygDo2jRueN2CQCjksWu5NEC
      MRibRlGPvwpFsWnRNB0AxgeC6NqL/4Y3LZNytY7u1ttVgzrcv/cpc2cvoTsNHq+luHD5MuFD
      ynK41SaL7/5HIuFRLnzv36KEgy/sLIDr2Nz/4F0yhsbt0Cj/4vuvdXxXWS6s8unD/810dZPZ
      M/+ay9de78iOlziWQf7D/8xWa4iZkMPEn/+H43YJgDt3f0Uy9wvGAhcZ/f5fQej4A+DeZp6V
      3/8MJs7zT995k8EOAmAtV+C9D/8TVmm13TuAQFM1mq0WwmxydmaccssioD5fdlrbXiI4NI3R
      KNHMpQlOTr2wswCu4zAwOMj0QJj3l8s4jtORHYBgdZNLmU+IGyUCu/ewL73asS3wJs9h11uY
      iy4jt1rU39Wx/6w7ybBXcui1fJpvx8+xXS+QcBy0LqXMXsihhWUwpLQoqQ6O43CQueedK18q
      E7LzxMYvthkAwkUPhNAVl2BsgLXtNBcujKFp6nNlp3bcQA9ZaOEYdqRFtEMprKuAEk3wdxs2
      r1y72tUi+6Hx19i5ZOCmt5m//sOu5bleyKHVRILg/J+hbt1H/e5bXfvklRz6hzeu894nv+Zb
      p68QDOooXfrlhRz6xMQY4e/8S6YERII6uv7su9Lz+uX1qTDK1hSO6EFdIMuy5HqAHvsk1wO0
      VxfINM2jnwT/cccQ/PrnP+Xmt9/hzu9vMz4QoTY0zfqn/8Ar5+co2AHeeuM1NAXuP/iMcDhK
      Zu0+BWUCvZolMjbFO99+DTD48f/8KZcvnePe2jYjg3HqxTpnr77ChTMnyG485vYnCwyOTZAr
      lHjt6ilKzQhXL/pjcinxB4qi9CYA9oPArGZZ20jBwD3mzr1CwihQMXO4agTbsYHA0+OMloHr
      Kly8epWSM4JZmaBSyX3+rs6ZM7MUCwUcVGLJJJfnr7GV2gJOUKo0eePWeX57L4uwHMZn5mgs
      Z466qZKXDEVRjn4IZNs2qro3V2hUi4jAAM1qkdTGGoPD0wQCLlYgSqBV4MlOmYho0iLK5FCY
      lhLj3Owwpgiz9MkfSM6cIru+jBobRjXqTM+dIjE2jm5W+Ic7Dzl7bpbFpSfMzJ0kly0wf2aK
      xfUsk4M6m5km3337dfafoMohUHt8k4dAlmXJOUC3yADovS0v5wAyEyzpW1RVlWuCJf3NkQeA
      4zhSDCfxJT1ZE+xVZWiJxGtkWRRJ3yPXBEv6lhdaE2wZTSxHIFyHfKHYdqeWwx+JX2k7EyyE
      YGvpLsr0LeJWlvWtDPrVa8SDGkKI56oO91eEeVGo1Ss7Xtrat+PV1j9eFbT1Cj9e83ZstHOu
      tleE2c0ShapJpVzCclw0VWDZ7d0B5PBH4leEEO3dAQLRIV79k7exbBcUBT08wHAsgPq5zud5
      GTmljc+0i5cb7nllSwjhafl3r9oH3mSC/XjN9zms3x12rhcSwymqTvDzBV2jI8PtHiYzwRLf
      IjPBkr5HPgaV9C09yQTLIZDEr8hMsKTvkUMgSd/Ss+rQcggk8SM9qw4tkfiRnlWHlkMgiR/p
      WXVoicSPyOrQkr7mhTLB+dQqhbqNbdR5uLiM3aaqT94BJH6lbTGca7coF3IowSlajV0c28Kw
      XBRdHFrw1LIshBCeicW6La7qtS0vH/N65ZNXxXH3bfjtmrfTvnbOZVlWmwHguLiqjlsvkYwP
      oVVTWI5LLBR8bhFS+EKV56e6OV7aknWBem+rnfYd1i/3acsbPRTl3OWbT18PDbevBpVI/IzM
      BEv6lp6I4WQmWOJXerIeQHZ+iV/pSXn0/QXj3QSCcE3+/v3fsLkzwLlzId66dUsG1gFUyyUc
      x0VRQFFVEoPJ43bJt/RMDNctRsNlZ7vIj/5RlOWF3OEH9DGxeIKdzXVSG+sMxDvfmbNfeCnm
      AMFoED0xy88++JjE1LRHnn0zadZr6HoAPRCgUa8dtzu+RlXV3myQ4UV9UNdxyWZKjE0Oofro
      mbvf8gC2baGw54tAoOuBQ444ep+8tuXlBhlHPgfYV4N220FUTWVkLOFJ538ZSK0vkmsG0Ft5
      GmqcXGqVb12a5dNNm1ZplVtvfo/JkQTLSw85MzfG3YU0Cwt3OX/6DLVGg9fe/A7JgRAPPr5N
      xY0g6mlaagK1mUdPTPLWG6+iKA7v//pXxMen2F7d4NW3vsP9d3/Dn/yzvyR+3BegB0gxnI+5
      f+8BCwsLmIS4de0CA6rDvfU8Uc3FNK2nn2s2G7hWk+jILFeuXGVoZJTXr10gVyoBMDo+Sr1R
      xzBaBINBJufOkQyBLQDRIjk+D1aTcDTAwh/e597iCul8+Zha3Vt6MgTy2xDBa1tH1b6dnR00
      BM1mjVzN5eT4AIVqi2gkyvKjzxgemyCfLzI3O8vq+jZvvfMdSvksdq3I6m6Z6ZEYmzt5RoaT
      NByF+VMnGBkZ5c6H7xEamaaZ38ZUE8QCLeIjs2Q2H3Py0k2iZpPw9CThZ/jkZfu6washkG3b
      co+wbvFjgEstUHsBYBhGm0MgIVi99zvWCyYIh9//9gMMpz1n5RBI4lc0TWtvEmw2iqQLNWLx
      CulamYZlUm8a6BH9UNmp67qeVU/2ozRXyqF7b8srObTjOM8eAtUbTVK7Gc6fOfnFSa0mNVOg
      B0JgtwiGY2iqHALJIVDvbR3pNqnbuxl+/Ivf8N/+x0/ZzXyRdVUCEeKxKJGgRiS61/nbQQ5/
      JH7lmVUhbNvm/sNl/tWP/pLJ8VFPTiKDQOJHnimGi8di/Pu/+jcEAt7c9rxKhEkkXvPMNcHD
      Q4NPO60Q0G2/lYthJH7lwEzw+sMH/OQnf8NmutL1SeRjUIlfOXBBzEAyRnxgiEg01GufJJKe
      8swAqJdrtGyDZqPV9Qkcx5HDIIkvOXBNsOs0aJQNLKf7juuFFFoiOQoO3CAjOTpOrlBgKBnt
      tU8SSU95ZgBktne4cvMmAQ/E0rIsisSvuK77bC3Q2MxZEq6NY3evJZHDH4lfOWB/AIcPfvV3
      3L33APNLc4DMxhK5mo3RqLBwf4GG2Z4cVGaCJX7lgLIoGq/cuMJKpoBh7XVyx6yTy2YJBE8w
      MhYlkRhAU/dm0Yep7rwUi/lRmSjVoL23deTFcRMjSYJFg0hQ2/uHojM0OobhNkmni5RqdUZc
      0ILaoUVIhRBSDdpjn6QatL3iuAfOAYxGk7XVNeavXgdAC4SYOjn/9P3JF6hMIjPBEr9yYCa4
      UasxMn2C8P4dQCL5hvLMO0B8aIxvnRxnINJdTRn4fNWNnAhLfMiBmeBWLc9//eu/ZrfU7Pok
      MhMs8SsHZoIVLcyNV6+B2/3TDZkIk/gVx3G+PgSq5baxYlPcvBih7lEiTN4BJH7kmZPgaHKE
      3dUHPHiyw9hwrOuTyM4v8SvPTISpephvv/1dXNfxYgTkyf4AEslRcGAeoF6rYrUaGEqUiZHu
      yqTKji/xM8+cBNfyKX7y878nEAp2fQL56y/xKwcmwlRNZzSZxPFASyKfAEn8yoE7xVuWi8DC
      +pLis1EpQDhJRHPY2E4zO3vi0Fr99UyFynYRRVFInhpFiwgKNYtE0OXRWobRZJSZ6TE2dirs
      rt1n+twNZidHaNTKBMJRMtubPFxe4eTsLMW6xc1XLu7ZLWd5tJZlKOLSZICAUURPTnNmdgKA
      7dUl1PgERr3EydkZPr5zh8s3bhEJaGTKTX75m0+oNwx+8Kc3mJ08/j20hGOSffK/+OXiJlNn
      v8v3Lr9x3C4BUHyS4cGje5yfmWfsyglU/cir6fcMIQTZzdWvB0C9uMP//dt3OXXuPNHPM8FC
      uKQ3llCmbhIxMkQ0yNdNhg+pDaoENZSAirBdlJDGxsoiqbJNSLG4fO0a7/38p5TOnmOnoVDb
      2mbyzDVs22Z7fZHhE2cpW2ESySEsx+Xc1AALyxtcOT/H48VFTC1Bw1SpFbeIjIzgbj2mOjFC
      RLXZyTdws0u4rmAi4rCS2iE8kuPC3AiLS5tcOTPBzPQwv3h/gR/98PWuLqQXeQ6j3uTfvfsh
      zUCaoa0t3pm/1ZU9r9Sgtz/6kNXtFUqFIv/k4g/R6E4a4xc1aLNa5pNf/ZjhEye/HgCRxCjf
      +fYtFpbW2P9e7WaFasNCFHOEogq76SxnRyafqjwPUt3pSZ3ySpZAJEgoEmJ1bZV81eL0qRnu
      P3rC6fmzLK3mmJmboqEqe9V6dZ2BaIzbv/09Z195A03TcFtVPl3Y4uSFm+i6zvjEJL/7ZAEj
      Hmbm7FU2H32CpUa5GtDRFYV6cRc1PkZm/SFhYaCpYBkWuq6TGBrk9p0lVlIFpieGu1YneqEG
      dYIBLjZCLCWSDAxPde2TV2rQ7//zv+Bv/st/509/8OeEQt1XCPGLGjQaTzA2d4ZKdvfrxXGb
      lSzvfXiXUDjCjddeJxnba/jXf+UUFOXwIqRmw0AL6GgB7Y9sfLVanBAuxcwWny484fyl65yY
      GPrK+4LttSWW11JcufEGY8nI0wn23qNW+Oyj31Nu6bz59rfQURDCZW+eL55+tmE65AtVjFaL
      qekxYl0K/rwIANdxya/uUnXKaEOjnBwf68onL+XQpXyBweGhl07u3U5x3GajLneI6RY/tu+r
      HeTx4iNOzl/g4cd/IBpPosSS2JUskVCQlVSet958k4AG6cwuAT3IztoCqVqIkUCL4PAJrl44
      Awg+++g2sZEpNlaXOT0/z8rCY669/jpjyQFcs877H97l0qXTLCyuc3pmlJ2iwRu3rrF/ZfwW
      ALZtH/0eYZLjRbg2pdwWy8uPEKFphlWNtfQWCw/vk97a5cuj5FRqm0wux4X5OcamzhIdmsCu
      5bEEgEOxUEaYLRxVY2PjCecu3GRrZRmAtZUNrl85we27i9iKTjw+QC6Xw+/PAF+KneIlnWPW
      82xkm4zrNczSOtrwJMmAiTJ5npBuo5gu2xsrWA6Y9Sq7+TrnZ84RCmjsPFlGGRhha2UJVw0Q
      icXIF4pMTs9ycirGu7/8HXPzp1hcXERzHX57+z5nL1xi7fFjtlNBFMfFoQebUXeI67q92SdY
      VdVv7PK8l2EIdBj57C6GrTA5OYH6lWbYtkUhl8VVgkxMjPLVVtpmk3S2QCyeJJl4vnbMb0Og
      nuwTLH/9/c/I2ORz3lUYf84aWD0Y4cSJE9471QMOKIviLful1iUSv9GTjbJl55f4FblTvKSv
      OVAMJ5H0C0ceAHJ/AIlfObAqhJfIqhASv3JgVYivIlyL5UcPSedKVEs5Htx7QN30pl6kRHKc
      tJUHUFSdcFDFdlxs18QwWtiOaKs4rm3bnt0F/FioVRbH7b2tIy+O+zVjlkHdEgxh46gBwpEI
      +ufy5XaKkMpMcG99ksVx2yuOe+CKsK8ZC4S5eOHi09ejo+3LdWUmWOJXZCZY0tfITLCkr5GZ
      YElfIzPBkr5HZoIlfYvMBEv6mrYzwRLJN5UjDwC5QYbEr7iue/QBIBNhEr/Sk0SY7PwSv9J2
      AAghqJRL2K4AIahWKrhtDmtkJljiV9rWAiEcsrsptJrFoG6QKhlcGBhA+dzIYaq8/fKFXjjs
      hR0vbe0HuBdB7qVP4I0a1K/XHJ7fvnbOdeAOMc/4JFowBK6FadvY9SK5yjTjiYPqhn7B/hDI
      q7uAl3cTrzqtH33ykpe1fYd97pl7hD0TVSMYDDMyOgyqDnqUscEw6ucTXE07uMCsEMIzOYQQ
      4rnnOi5bfmufl3JoP17zdtp3WL/c96fNBTEa018qfjQxMd7OYU9P8tVK0BKJH+hJJliK4SR+
      RWaCJX2PzARL+paeDIFkJljiV3qyHkB2folfkWuCJX1NT8RwEomfkXMASd/SkzmAHP5I/ErP
      yqLIIJD4kbbnAPvFcQvlOiBYX1vBblPUJzPBEr+iadqLFMfVaLYMGopBqVJj0hUowj20CKnr
      uk8l0d3ix0Ktsjhu7215VRzXcZwXKI5rusSCDWpKALNVp2lYJGPBQ4uQWpb1tIhut/ixUKss
      jtt7W14Vx207ANRAmIsXvyiOOz4+0c5hgHwKJPEvPRHDyc4v8TNSDCfpW3pWFkUi8SM9K4si
      g0DiR3omhpNI/IjMBEv6GrlBhqSvkRtkSPoeuUGGpG+RG2RI+hpZFkXS97Qth1588BnrqSxG
      o8JnH39MuWW1dQKZCZb4lfaL46ISjkbRFFAUjaHJaeJBHcdx2pJDf/lvtw77TZor5dC9t9Vz
      OTSug2m7jEeDVOpN6pUSxugYkaB2qOxUURTfyYW9tCXl0L235ZUcGmhzQYwe5Pz5+aevR0dH
      2zkMkMVxJf6lZ5lgicSPyEywpK+RmWBJ3yMzwZK+RWaCJX2NzARL+h65JljSt8g1wZK+pv2d
      4j8vjZgtVGjVSty7v4DZZm1EuSZY4lfaDoC90ogqpmVTrNQ4PTVCsdmeGE4uiZT4lbYTYa5l
      ULcEqmsSDkdYSeVJRgJtn0Qi8SNCCBTxeQ+tVqsdddZGo0E0Gj3wfS/FYq7reiLw8tKWH33a
      /x6/qde8nfYd1i/hK2rQeDzesUOJROLA9/YrQ3vxZTiOg6ZpXdvx0paXAe6VT16qQf14zdtt
      3/P65b4/3uhcn4OXE2Cvfom8tOVHn77p19yr9h2tFkg4bG+nALDNJulsoWNTrXqFXLGCoihk
      d7fJ5Esd26qUizgugCC1ncLtcIoihEupVEZRFIx6hdW1LTpdftKsldnNFlAUhVI+Q61pduiT
      w+bGJo4LVqvOk5V1nA59qleKpNI5UBSqxRzlWrNDS4L09iaVeguAjdXHVBudtQ+gWinjCHBt
      g510rgN3BLupbWxXgDhCKUQmtU0Ak0zNIrWboVUrYnbYQ3YzecrFHCDY2dkhHA516JVLrZSn
      ZUOjlMEWsNNhYNpmi2KlCkB6Zwc9HKbT3yVHqNQqRYRwKVYbZHa2O/PJsgiqLsVak9xOCiUU
      7vgLFkKQzaQRAnKlKvnMToeG9mxlMlmE0yKdLRMKtfcA5au4tsHy4kMapksqtYvTKNN4wQVm
      tlGiZatsbe+Q3kkdXQDouka+WEE4ForrUGsYHXcQ4Vq0DJtWy2BoeIiNja2O/WrUqhRLRSxX
      UC4WO1+hJKCYy1Cu1oknh8hub2B1GOCZ1DpKIIphGBiNGp3mJ+1Wna1cmZDqEhkcoryzSbPD
      FYimaWJZFq1WC8todNw2hItpW5imgWFYDA5G2E5lOjJVLRUxTJNSqQwIyrUm2gteKkXVqZYK
      qIrARfniKVCnVCqVZ082hMAwTXRdRwFsxyUY7DDyHRvbBU1VcGwbVQ+gv2jL95yi2Wyiajq6
      ru/9YgZDdDKkdB2blmESCARRFbBdl1Aw2IFPYBoGjisIBgO4joOq6WgdtM91HFqGseeTCpbt
      Eg515pNtmTju3g+ZcB1QNfROJrBCYBgtND2IooBlmgTDYdQOx/H70hpFAct2Drzmh/XLQEBH
      HGkASCTHSLv9UqpBJX2NDAAPaTXrNJpG13aKhQK1Wg3hOtQbX3/60qzXcVxBvV7/4n/VEnWj
      PXmK5AuOPA/QN7gG7/2/D7n+6g1WlncYGxun5dgYlTrReAACCWq5FJuba8ycu4pZrzE7d4JU
      usBQVEUEY+TTWa5ev8ri0hJrDz/hxpvv8NnjTa6fmiQxOoHruoxNTPLe3/4f5i5/iw/uPOAf
      v3YNx6wRH51i89Eab7x247ivxEuFDACvEC6KHsappilVatz9w0e8/Rc/YDtbJH93kemZCRr6
      FIODgwTMCsV6g5/9+BfExsYYHQyAC7u7BU5fuYpQBLNn5ri/sML4cICF+58RHJsju5PmnTev
      E0rO8OjePc6cmiKTzuIoJrlyDUV+nS+MnAR7SCmXxlSCNCslhkdGCcciGC0Tq1GmJUI4zRLx
      5DD1eotEYgDhuqSzBQYiKlowSrFY4dy509y9c4fzFy7gOg6aplIq5AnFEoQDOpGBBEajhu04
      aLqGIhSEImiW0mQaAa7Onzzuy+AL2u2XMgAk30ja7Zf/H3uu99vuqEagAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
